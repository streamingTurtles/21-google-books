{"ast":null,"code":"import axios from \"axios\"; // my google books api key\n\nvar apiKey = \"AIzaSyCyG_qBeit_4b5tfm0mjC4l3Tt7SetX6BU\"; // Google API request to find searched book\n\nexport default {\n  getBooksByTitle: function getBooksByTitle(title) {\n    return new Promise(function (resolve, reject) {\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=$\" + title + \"&key=\" + apiKey).then(function (res) {\n        var bookResults = res.data.items;\n        var results = bookResults.map(function (book) {\n          var _book$volumeInfo$imag = book.volumeInfo.imageLinks,\n              imageLinks = _book$volumeInfo$imag === void 0 ? null : _book$volumeInfo$imag;\n          var thumbnail = imageLinks ? imageLinks.thumbnail : null;\n          return {\n            id: book.id,\n            title: book.volumeInfo.title,\n            authors: book.volumeInfo.authors,\n            description: book.volumeInfo.description,\n            image: thumbnail,\n            link: book.volumeInfo.previewLink\n          };\n        });\n        resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  // gets all books\n  getBooks: function getBooks() {\n    return axios.get(\"/api/books\");\n  },\n  // get book with the given id\n  getBook: function getBook(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // deletes book with given id\n  deleteBook: function deleteBook(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // saves te book to the database\n  saveBook: function saveBook(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};","map":{"version":3,"sources":["/Users/viviannecardillo/COLUMBIA_onViv's_Mac/_HW_21_due_04.13.2021_Google-Books-React-Search/21-google-books/client/src/utils/API.js"],"names":["axios","apiKey","getBooksByTitle","title","Promise","resolve","reject","get","then","res","bookResults","data","items","results","map","book","volumeInfo","imageLinks","thumbnail","id","authors","description","image","link","previewLink","catch","err","getBooks","getBook","deleteBook","delete","saveBook","bookData","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,yCAAf,C,CAEE;;AACA,eAAe;AACbC,EAAAA,eAAe,EAAE,yBAASC,KAAT,EAAgB;AAC7B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCN,MAAAA,KAAK,CACAO,GADL,CACS,oDAAoDJ,KAApD,GAA4D,OAA5D,GAAsEF,MAD/E,EAEKO,IAFL,CAEU,UAAAC,GAAG,EAAI;AACb,YAAMC,WAAW,GAAGD,GAAG,CAACE,IAAJ,CAASC,KAA7B;AACA,YAAMC,OAAO,GAAGH,WAAW,CAACI,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AAAA,sCACNA,IAAI,CAACC,UADC,CAC5BC,UAD4B;AAAA,cAC5BA,UAD4B,sCACf,IADe;AAGpC,cAAMC,SAAS,GAAGD,UAAU,GAAGA,UAAU,CAACC,SAAd,GAA0B,IAAtD;AACA,iBAAO;AACHC,YAAAA,EAAE,EAAEJ,IAAI,CAACI,EADN;AAEHhB,YAAAA,KAAK,EAAEY,IAAI,CAACC,UAAL,CAAgBb,KAFpB;AAGHiB,YAAAA,OAAO,EAAEL,IAAI,CAACC,UAAL,CAAgBI,OAHtB;AAIHC,YAAAA,WAAW,EAAEN,IAAI,CAACC,UAAL,CAAgBK,WAJ1B;AAKHC,YAAAA,KAAK,EAAEJ,SALJ;AAMHK,YAAAA,IAAI,EAAER,IAAI,CAACC,UAAL,CAAgBQ;AANnB,WAAP;AAQH,SAZe,CAAhB;AAaAnB,QAAAA,OAAO,CAACQ,OAAD,CAAP;AACC,OAlBL,EAmBKY,KAnBL,CAmBW,UAAAC,GAAG;AAAA,eAAIpB,MAAM,CAACoB,GAAD,CAAV;AAAA,OAnBd;AAoBC,KArBM,CAAP;AAsBH,GAxBY;AAyBf;AACAC,EAAAA,QAAQ,EAAE,oBAAW;AACnB,WAAO3B,KAAK,CAACO,GAAN,CAAU,YAAV,CAAP;AACD,GA5Bc;AA6Bf;AACAqB,EAAAA,OAAO,EAAE,iBAAST,EAAT,EAAa;AACpB,WAAOnB,KAAK,CAACO,GAAN,CAAU,gBAAgBY,EAA1B,CAAP;AACD,GAhCc;AAiCf;AACAU,EAAAA,UAAU,EAAE,oBAASV,EAAT,EAAa;AACvB,WAAOnB,KAAK,CAAC8B,MAAN,CAAa,gBAAgBX,EAA7B,CAAP;AACD,GApCc;AAqCf;AACAY,EAAAA,QAAQ,EAAE,kBAASC,QAAT,EAAmB;AAC3B,WAAOhC,KAAK,CAACiC,IAAN,CAAW,YAAX,EAAyBD,QAAzB,CAAP;AACD;AAxCc,CAAf","sourcesContent":["import axios from \"axios\";\n\n// my google books api key\nconst apiKey = \"AIzaSyCyG_qBeit_4b5tfm0mjC4l3Tt7SetX6BU\"\n\n  // Google API request to find searched book\n  export default {\n    getBooksByTitle: function(title) {\n        return new Promise((resolve, reject) => {\n        axios\n            .get(\"https://www.googleapis.com/books/v1/volumes?q=$\" + title + \"&key=\" + apiKey)\n            .then(res => {\n            const bookResults = res.data.items;\n            const results = bookResults.map(book => {\n                const { imageLinks = null } = book.volumeInfo\n\n                const thumbnail = imageLinks ? imageLinks.thumbnail : null\n                return {\n                    id: book.id,\n                    title: book.volumeInfo.title,\n                    authors: book.volumeInfo.authors,\n                    description: book.volumeInfo.description,\n                    image: thumbnail,\n                    link: book.volumeInfo.previewLink\n                };\n            });\n            resolve(results);\n            })\n            .catch(err => reject(err));\n        });\n    },\n  // gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // get book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // deletes book with given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // saves te book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}